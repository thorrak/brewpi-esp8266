; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
; Added this here to "hard code" the environment for macro debugging/visuals
;default_envs = esp32_wifi_tft


[common]
framework = arduino
; The default platform & platform package only applies to ESP32 derivatives
platform = espressif32
platform_packages = 
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#3.0.7
    platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/esp32-arduino-lib-builder/releases/download/idf-release_v5.1/esp32-arduino-libs-idf-release_v5.1-632e0c2a.zip
    ; platformio/framework-arduinoespressif32-libs @ https://github.com/espressif/esp32-arduino-libs.git#idf-release/v5.1
lib_deps =
    https://github.com/tzapu/WiFiManager.git#0d84861270c3cd64f72a4eaf34443ee580d2547e ; Anchor to latest commit as of 8/7/24
    pstolarz/OneWireNg@^0.13.1
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git#ba26a1f1ee74dc875d3cc8fdb2ea1f55ee5ee333 ; Anchor to latest commit as of 1/26/24
    bblanchon/ArduinoJson @ ^6.21.2
    bblanchon/StreamUtils @ ^1.7.3
    ; https://github.com/thorrak/AsyncTCP
    ; https://github.com/thorrak/ESPAsyncWebServer.git
    https://github.com/thorrak/Arduino-Log.git ; // Need this until ArduinoLog merges https://github.com/thijse/Arduino-Log/pull/21
lib_deps_bluetooth = 
    h2zero/NimBLE-Arduino @ ^1.4.1 ; https://github.com/h2zero/NimBLE-Arduino.git

; Let's also include some other common build flags for ease-of-use
build_flags = 
    !python3 scripts/gen_version.py
    -DCONFIG_USE_NATIVE_CPP_NEW
upload_speed = 460800
monitor_speed = 115200
; These are true for most devices on MacOS - Will likely need to be changed if compiling on other platforms
build_type = release
monitor_dtr = 1
monitor_rts = 1


[env:esp32_wifi_tft]
board = lolin_d32
platform = ${common.platform}
framework = ${common.framework}
platform_packages = ${common.platform_packages}
; board_build.arduino.upstream_packages = no
; For esp32_wifi_tft we want to enable LCD support, TFT support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    ; BREWPI_TFT is the flag we're using for TFTs in general
    ; BREWPI_TFT_ILI9341 is the flag we're using for the "big" (LoLin) TFTs
    -DBREWPI_TFT
    -DBREWPI_TFT_ILI9341
    -DESP8266_WiFi
    -DHAS_BLUETOOTH
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    ; -DENABLE_PROMETHEUS_SERVER
    -DENABLE_HTTP_INTERFACE
    -DCONFIG_BT_NIMBLE_ROLE_PERIPHERAL_DISABLED
    -DCONFIG_BT_NIMBLE_ROLE_BROADCASTER_DISABLED
    -DCONFIG_BT_NIMBLE_PINNED_TO_CORE=1
    -DESP32_STOCK
lib_deps =
    ${common.lib_deps}
    ${common.lib_deps_bluetooth}
    https://github.com/PaulStoffregen/XPT2046_Touchscreen
    adafruit/Adafruit GFX Library@^1.11.5
    adafruit/Adafruit ILI9341@^1.5.12
    adafruit/Adafruit BusIO@^1.14.1
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_no_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder


[env:esp32_wifi_iic]
board = lolin_d32
platform = ${common.platform}
framework = ${common.framework}
platform_packages = ${common.platform_packages}
; For esp32_wifi_iic we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DHAS_BLUETOOTH
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    ; -DENABLE_PROMETHEUS_SERVER
    -DENABLE_HTTP_INTERFACE
    -DCONFIG_BT_NIMBLE_ROLE_PERIPHERAL_DISABLED
    -DCONFIG_BT_NIMBLE_ROLE_BROADCASTER_DISABLED
    -DCONFIG_BT_NIMBLE_PINNED_TO_CORE=1
    -DESP32_STOCK
lib_deps =
    ${common.lib_deps}
    ${common.lib_deps_bluetooth}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_no_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder

[env:esp8266_wifi]
; v4.1.0 was known to be more stable with WiFi - but trying 4.2.1 to see if the issues have been fixed
platform = espressif8266@4.2.1
board = d1_mini
framework = ${common.framework}
board_build.filesystem = littlefs
; For esp8266_wifi we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DENABLE_HTTP_INTERFACE
    -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK221
lib_deps =
    ${common.lib_deps}

upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
build_type = ${common.build_type}
monitor_filters = esp8266_exception_decoder, default


[env:esp8266_serial]
platform = espressif8266
board = d1_mini
framework = ${common.framework}
; For esp8266_serial we want to enable LCD support and IIC support, but disable WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_Serial
lib_deps =
    ${common.lib_deps}

upload_speed = ${common.upload_speed}
monitor_speed = 57600
;upload_port = ${common.upload_port}
;monitor_port = ${common.monitor_port}
build_type = ${common.build_type}
board_build.filesystem = littlefs
monitor_filters = esp8266_exception_decoder, default



; [env:esp32_c3_wifi]
; platform = espressif32
; board = lolin_c3_mini
; framework = ${common.framework}
; ; For esp32_c3_wifi we want to enable LCD support, TFT support, and WiFi support
; build_flags =
;     ${common.build_flags}
;     -DBREWPI_LCD
;     -DBREWPI_IIC
;     -DESP8266_WiFi
;     -DEXTERN_SENSOR_ACTUATOR_SUPPORT
;     ; -DENABLE_PROMETHEUS_SERVER
;     ; -DENABLE_HTTP_INTERFACE
;     -DESP32C3
; lib_deps =
;     ${common.lib_deps}
; ; platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32#master
; upload_speed = ${common.upload_speed}
; monitor_speed = ${common.monitor_speed}
; board_build.partitions = 4mb_inc_ota.csv
; ;board_build.filesystem = spiffs
; build_type = ${common.build_type}
; monitor_filters =
;     esp32_exception_decoder


[env:esp32_s2_wifi]
board = lolin_s2_mini
platform = ${common.platform}
framework = ${common.framework}
platform_packages = ${common.platform_packages}
; v4.4.4 of esp-idf introduces a bug in the IIC implementation that causes MASSIVE delays
; in the IIC bus on the S2 (meaning that writes to the LCD grind the controller to a halt). 
; This appears to be related to https://github.com/espressif/arduino-esp32/issues/8480#issuecomment-1708909457
; platform_packages =
;     platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.12
; For esp32_s2_wifi we want to enable LCD support, IIC support, and WiFi support
; There is no Bluetooth support on this chip. 
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DENABLE_HTTP_INTERFACE
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    ; -DENABLE_PROMETHEUS_SERVER
    ; -DENABLE_HTTP_INTERFACE
    -DESP32S2
lib_deps =
    ${common.lib_deps}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
board_build.filesystem = spiffs
;board_build.filesystem = littlefs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder


[env:esp32_s2_serial]
board = lolin_s2_mini
platform = ${common.platform}
framework = ${common.framework}
platform_packages = ${common.platform_packages}
; v4.4.4 of esp-idf introduces a bug in the IIC implementation that causes MASSIVE delays
; in the IIC bus on the S2 (meaning that writes to the LCD grind the controller to a halt). 
; This appears to be related to https://github.com/espressif/arduino-esp32/issues/8480#issuecomment-1708909457
; platform_packages =
;     platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.12
; For esp32_s2_serial we want to enable LCD support, IIC support, and Serial support
; There is no Bluetooth support on this chip. 
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_Serial
    ; -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    -DESP32S2
lib_deps =
    ${common.lib_deps}
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
;board_build.filesystem = spiffs
;board_build.filesystem = littlefs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder

[env:esp32_wifi_espi]
board = esp32dev
platform = ${common.platform}
framework = ${common.framework}
platform_packages = ${common.platform_packages}
; board_build.arduino.upstream_packages = no
; For esp32_wifi_tft we want to enable LCD support, TFT support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_TFT
    -DBREWPI_TFT_ESPI
    -DHAS_AXP192
    -DESP8266_WiFi
    -DHAS_BLUETOOTH
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    ; -DENABLE_PROMETHEUS_SERVER
    -DENABLE_HTTP_INTERFACE
    -DCONFIG_BT_NIMBLE_ROLE_PERIPHERAL_DISABLED
    -DCONFIG_BT_NIMBLE_ROLE_BROADCASTER_DISABLED
    -DCONFIG_BT_NIMBLE_PINNED_TO_CORE=1
    -DESP32_STOCK
    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DTFT_WIDTH=135
    -DTFT_HEIGHT=240
    -DCGRAM_OFFSET=1
    -DTFT_MISO=-1
    -DTFT_MOSI=15
    -DTFT_SCLK=13
    -DTFT_CS=5
    -DTFT_DC=23
    -DTFT_RST=18
    -DLOAD_GFXFF=1
    -DSMOOTH_FONT=1

lib_deps =
    ${common.lib_deps}
    ${common.lib_deps_bluetooth}
    ; bodmer/TFT_eSPI @ 2.5.43 ; https://github.com/Bodmer/TFT_eSPI.git
    https://github.com/Bodmer/TFT_eSPI.git#5793878d24161c1ed23ccb136f8564f332506d53 ; master as of 7/6/24
upload_speed = 1500000
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_no_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder
