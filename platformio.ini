; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
; Added this here to "hard code" the environment for macro debugging/visuals
default_envs = esp32_wifi_tft


[common]
framework = arduino
lib_deps =
    https://github.com/tzapu/WiFiManager.git ;#feature_asyncwebserver
    https://github.com/pstolarz/OneWireNg.git
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git
    bblanchon/ArduinoJson @ ^6.19.1
    bblanchon/StreamUtils @ ^1.5.0
    https://github.com/thorrak/ESPAsyncWebServer.git

; Let's also include some other common build flags for ease-of-use
build_flags = 
    !python3 scripts/gen_version.py
    -DCONFIG_USE_NATIVE_CPP_NEW
upload_speed = 460800
monitor_speed = 115200
; These are true for most devices on MacOS - Will likely need to be changed if compiling on other platforms
build_type = release
monitor_dtr = 1
monitor_rts = 1



; [env:esp32_m5stickc_plus]
; platform = espressif32
; board = lolin_d32
; framework = ${common.framework}
; ; For esp32_wifi_tft we want to enable LCD support, TFT support, and WiFi support
; build_flags =
;     ${common.build_flags}
;     -DBREWPI_LCD
;     -DBREWPI_TFT
;     -DESP8266_WiFi
;     -DHAS_BLUETOOTH
;     -DEXTERN_SENSOR_ACTUATOR_SUPPORT
; lib_deps =
;     ${common.lib_deps}
;     https://github.com/PaulStoffregen/XPT2046_Touchscreen
;     Adafruit GFX Library
;     Adafruit ILI9341
;     Adafruit BusIO
;     AsyncTCP
;     h2zero/NimBLE-Arduino @ ^1.3.7 ; https://github.com/h2zero/NimBLE-Arduino.git

; upload_speed = 1500000
; monitor_speed = ${common.monitor_speed}
; board_build.partitions = 4mb_inc_ota.csv
; build_type = ${common.build_type}
; monitor_dtr = ${common.monitor_dtr}
; monitor_rts = ${common.monitor_rts}
; ;build_board.filesystem = spiffs
; monitor_filters =
;     esp32_exception_decoder


[env:esp32_wifi_tft]
platform = espressif32
board = lolin_d32
framework = ${common.framework}
; For esp32_wifi_tft we want to enable LCD support, TFT support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_TFT
    -DESP8266_WiFi
    -DHAS_BLUETOOTH
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    -DESP32_STOCK
lib_deps =
    ${common.lib_deps}
    https://github.com/PaulStoffregen/XPT2046_Touchscreen
    Adafruit GFX Library
    Adafruit ILI9341
    Adafruit BusIO
    AsyncTCP
    h2zero/NimBLE-Arduino @ ^1.3.7 ; https://github.com/h2zero/NimBLE-Arduino.git
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder


[env:esp32_wifi_iic]
platform = espressif32
board = lolin_d32
framework = ${common.framework}
; For esp32_wifi_iic we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DHAS_BLUETOOTH
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    -DESP32_STOCK
lib_deps =
    ${common.lib_deps}
    AsyncTCP
    h2zero/NimBLE-Arduino @ ^1.3.7 ; https://github.com/h2zero/NimBLE-Arduino.git
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder

[env:esp8266_wifi]
; The latest platform has a bug that causes SIGNIFICANT inconsistency in connecting to WiFi. Rolling back for now.
platform = espressif8266@2.6.3
board = nodemcuv2
framework = ${common.framework}
board_build.filesystem = littlefs
; For esp8266_wifi we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
lib_deps =
    ${common.lib_deps}

upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
build_type = ${common.build_type}
monitor_filters = esp8266_exception_decoder, default


[env:esp8266_wifi_lowdelay]
platform = espressif8266@2.6.3
board = nodemcuv2
framework = ${common.framework}
; For esp8266_wifi we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DTEMP_CONTROL_LOWDELAY
lib_deps =
    ${common.lib_deps}

upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
build_type = ${common.build_type}
board_build.filesystem = littlefs
monitor_filters = esp8266_exception_decoder, default


[env:esp8266_serial]
platform = espressif8266
board = nodemcuv2
framework = ${common.framework}
; For esp8266_serial we want to enable LCD support and IIC support, but disable WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_Serial
lib_deps =
    ${common.lib_deps}

upload_speed = ${common.upload_speed}
monitor_speed = 57600
;upload_port = ${common.upload_port}
;monitor_port = ${common.monitor_port}
build_type = ${common.build_type}
board_build.filesystem = littlefs
monitor_filters = esp8266_exception_decoder, default



[env:esp32_c3_wifi]
; platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform = https://github.com/tasmota/platform-espressif32/releases/download/v3.4.1/Tasmota-platform-espressif32.zip
board = esp32-c3-devkitm-1
framework = ${common.framework}
; For esp32_wifi_tft we want to enable LCD support, TFT support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    -DESP32C3
lib_deps =
    ${common.lib_deps}
platform_packages =
   framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32#master
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
;board_build.filesystem = spiffs
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder


[env:esp32_s2_wifi]
;platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
;platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2idf/platform-espressif32-2.0.2.zip
platform = https://github.com/tasmota/platform-espressif32/releases/download/v3.4.1/Tasmota-platform-espressif32.zip
board = esp32-s2-saola-1
framework = ${common.framework}
; For esp32_s2_wifi we want to enable LCD support, IIC support, and WiFi support
build_flags =
    ${common.build_flags}
    -DBREWPI_LCD
    -DBREWPI_IIC
    -DESP8266_WiFi
    -DEXTERN_SENSOR_ACTUATOR_SUPPORT
    -DESP32S2
lib_deps =
    ${common.lib_deps}
; platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32#master
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
upload_speed = ${common.upload_speed}
monitor_speed = ${common.monitor_speed}
board_build.partitions = 4mb_inc_ota.csv
;board_build.filesystem = spiffs
board_build.filesystem = littlefs
board_build.flash_mode = qio
build_type = ${common.build_type}
monitor_filters =
    esp32_exception_decoder

